rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isSignedIn() && request.auth.token.email == 'hariprakashpc@gmail.com';
    }
    
    // Products collection - anyone can read, only authenticated users can write (admin)
    match /products/{productId} {
      allow read: if true;  // Anyone can browse products
      allow write: if isSignedIn();  // Only logged-in users (admins) can modify
    }
    
    // Users collection - users can read/write their own profile only
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      
      // Addresses subcollection - users can only access their own addresses
      match /addresses/{addressId} {
        allow read, write: if isOwner(userId);
      }
      
      // Orders subcollection - users can only access their own orders  
      match /orders/{orderId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Top-level Orders collection - for admin access and user-specific access
    match /orders/{orderId} {
      allow read: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
    }
  }
}
